{
  "permissions": {
    "allow": [
      "Bash(cat:*)",
      "Bash(python test_postgresql_connector.py:*)",
      "Bash(python3:*)",
      "Bash(ls:*)",
      "Bash(rm:*)",
      "Bash(py:*)",
      "Bash(cmd //c:*)",
      "Bash(/c/Python313/python.exe test_cli.py)",
      "Bash(/c/Python313/python.exe test_help.py)",
      "Bash(/c/Python313/python.exe test_sample_config.py)",
      "Bash(/c/Python313/python.exe test_schema_cache.py)",
      "Bash(/c/Python313/python.exe test_cache_simple.py)",
      "Bash(/c/Python313/python.exe test_direct_cache.py)",
      "Bash(/c/Python313/python.exe -m py_compile src/connectors/database_connector.py)",
      "Bash(/c/Python313/python.exe -m py_compile src/connectors/postgresql_connector.py)",
      "Bash(/c/Python313/python.exe -m py_compile src/connectors/mysql_connector.py)",
      "Bash(/c/Python313/python.exe -m py_compile src/connectors/sqlite_connector.py)",
      "Bash(/c/Python313/python.exe -c \"\nfrom src.connectors.database_connector import DatabaseConnector\nfrom src.handlers.logging_handler import LoggingHandler\nimport logging\n\n# Initialize logging\nlog_handler = LoggingHandler()\nlogger = log_handler.setup_logging(level=''DEBUG'', console_output=True, file_output=False)\n\n# Test logging format\nlogger = logging.getLogger(''data_ingestion.test'')\nlogger.info(''DB_CONNECTION_TEST: Testing new logging format'')\nlogger.debug(''DB_QUERY_EXECUTE: SELECT query completed in 0.123s, returned 5 rows'')\nlogger.info(''DB_INSERT: Successfully inserted 100 rows into table users in 2.456s (40.7 rows/sec)'')\nlogger.info(''DB_UPSERT: Successfully processed 50 rows in table products in 1.234s (40.5 rows/sec)'')\nlogger.info(''DB_SCHEMA_CREATE: Successfully created table orders in 0.087s'')\n\nprint(''Logging test completed successfully!'')\n\")",
      "Bash(/c/Python313/python.exe -c \"\nfrom src.handlers.logging_handler import LoggingHandler\nimport logging\n\n# Initialize logging\nlog_handler = LoggingHandler()\nlogger = log_handler.setup_logging(level=''DEBUG'', console_output=True, file_output=False)\n\n# Test logging format with new contextual messages\ntest_logger = logging.getLogger(''data_ingestion.test'')\ntest_logger.info(''DB_CONNECTION_TEST: Testing new logging format'')\ntest_logger.debug(''DB_QUERY_EXECUTE: SELECT query completed in 0.123s, returned 5 rows'')\ntest_logger.info(''DB_INSERT: Successfully inserted 100 rows into table users in 2.456s (40.7 rows/sec)'')\ntest_logger.info(''DB_UPSERT: Successfully processed 50 rows in table products in 1.234s (40.5 rows/sec)'')\ntest_logger.info(''DB_SCHEMA_CREATE: Successfully created table orders in 0.087s'')\n\nprint(''Logging test completed successfully!'')\n\")",
      "Bash(mkdir:*)",
      "Bash(/c/Python313/python.exe -m pytest tests/unit/connectors/test_database_connector.py::TestDatabaseConnector::test_initialization -xvs)",
      "Bash(pip install:*)",
      "Bash(/c/Python313/python.exe -m pip install pytest pytest-mock)",
      "Bash(/c/Python313/python.exe -m pytest tests/unit/connectors/test_database_connector.py::TestDatabaseConnector::test_initialization -v)",
      "Bash(/c/Python313/python.exe test_simple.py)",
      "Bash(/c/Python313/python.exe -m pytest test_simple.py -v)",
      "Bash(/c/Python313/python.exe run_tests.py)",
      "Bash(del test_simple.py)",
      "Bash(/c/Python313/python.exe:*)",
      "Bash(del test_streamlit_app.py)",
      "Bash(streamlit run:*)",
      "Bash(timeout:*)",
      "Bash(del test_schema_fix.py)",
      "Bash(del srcconnectorspostgresql_connector.py)",
      "Bash(del srcconnectorsmysql_connector.py)",
      "Bash(del srcconnectorsconnection_pool_manager.py)",
      "Bash(del srcconnectorsdb_config_schema.py)",
      "Bash(del srcconnectorsconnector_factory.py)",
      "Bash(mv:*)",
      "Bash(find:*)",
      "Bash(sqlite3:*)"
    ],
    "deny": []
  }
}